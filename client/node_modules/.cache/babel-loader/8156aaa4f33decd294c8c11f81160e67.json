{"ast":null,"code":"import _regeneratorRuntime from \"/Users/admin/Desktop/MiniMernForm/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/admin/Desktop/MiniMernForm/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/admin/Desktop/MiniMernForm/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/admin/Desktop/MiniMernForm/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/admin/Desktop/MiniMernForm/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/admin/Desktop/MiniMernForm/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/admin/Desktop/MiniMernForm/client/src/App.js\";\n// We use Route in order to define the different routes of our applicatio\nimport React, { Component } from 'react';\nimport { Router } from \"@reach/router\"; //import { Route } from \"react-router-dom\";\n// We import all the components we need in our app\n//import Navbar from \"./Component/navbar\";\n\nimport Record from \"./Component/Note/Record\";\nimport Records from \"./Component/Note/Records\"; //import Gallery from \"./Component/Gallery/Gallery\";\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  // API url from the file '.env' OR the file '.env.development'.\n  // The first file is only used in production.\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.API_URL = process.env.REACT_APP_API_URL;\n    _this.state = {\n      //artwalks: [],\n      records: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Get everything from the API\n      this.getRecords().then(function () {\n        return console.log(\"Records got it!\");\n      });\n    }\n  }, {\n    key: \"getRecords\",\n    value: function () {\n      var _getRecords = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var url, result, json;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                url = \"\".concat(this.API_URL, \"/records\"); // URL of the API.\n\n                _context.next = 3;\n                return fetch(url);\n\n              case 3:\n                result = _context.sent;\n                _context.next = 6;\n                return result.json();\n\n              case 6:\n                json = _context.sent;\n                return _context.abrupt(\"return\", this.setState({\n                  // Set it in the state\n                  records: json\n                }));\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getRecords() {\n        return _getRecords.apply(this, arguments);\n      }\n\n      return getRecords;\n    }()\n  }, {\n    key: \"getRecord\",\n    value: function getRecord(id) {\n      // Find the relevant artwalk by id\n      return this.state.records.find(function (k) {\n        return k._id === id;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Router, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Record, {\n        path: \"/record/:id\",\n        getRecord: function getRecord(id) {\n          return _this2.getRecord(id);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Records, {\n        path: \"/\",\n        records: this.state.records,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/admin/Desktop/MiniMernForm/client/src/App.js"],"names":["React","Component","Router","Record","Records","App","props","API_URL","process","env","REACT_APP_API_URL","state","records","getRecords","then","console","log","url","fetch","result","json","setState","id","find","k","_id","getRecord"],"mappings":";;;;;;;AAAA;AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,MAAR,QAAqB,eAArB,C,CACA;AACA;AACA;;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,OAAP,MAAoB,0BAApB,C,CACA;;IAIMC,G;;;;;AACF;AACA;AAGA,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AADe,UAFnBC,OAEmB,GAFTC,OAAO,CAACC,GAAR,CAAYC,iBAEH;AAEf,UAAKC,KAAL,GAAa;AACT;AAEAC,MAAAA,OAAO,EAAE;AAHA,KAAb;AAFe;AAOlB;;;;WAED,6BAAoB;AAChB;AAEA,WAAKC,UAAL,GAAkBC,IAAlB,CAAuB;AAAA,eAAMC,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAAN;AAAA,OAAvB;AACH;;;;iFAEL;AAAA;AAAA;AAAA;AAAA;AAAA;AACYC,gBAAAA,GADZ,aACqB,KAAKV,OAD1B,eAC6C;;AAD7C;AAAA,uBAE2BW,KAAK,CAACD,GAAD,CAFhC;;AAAA;AAEYE,gBAAAA,MAFZ;AAAA;AAAA,uBAGyBA,MAAM,CAACC,IAAP,EAHzB;;AAAA;AAGYA,gBAAAA,IAHZ;AAAA,iDAIe,KAAKC,QAAL,CAAc;AAAE;AACnBT,kBAAAA,OAAO,EAAEQ;AADQ,iBAAd,CAJf;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;WAUI,mBAAUE,EAAV,EAAc;AACV;AACA,aAAO,KAAKX,KAAL,CAAWC,OAAX,CAAmBW,IAAnB,CAAwB,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACC,GAAF,KAAUH,EAAd;AAAA,OAAzB,CAAP;AACH;;;WAED,kBAAS;AAAA;;AACL,0BAEI,uDACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,aAAb;AAA2B,QAAA,SAAS,EAAE,mBAAAA,EAAE;AAAA,iBAAI,MAAI,CAACI,SAAL,CAAeJ,EAAf,CAAJ;AAAA,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,eAGI,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAC,GAAd;AAAkB,QAAA,OAAO,EAAE,KAAKX,KAAL,CAAWC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CADJ,CAFJ;AAUH;;;;EA9CaX,S;;AAiDlB,eAAeI,GAAf","sourcesContent":["// We use Route in order to define the different routes of our applicatio\nimport React, {Component} from 'react';\nimport {Router} from \"@reach/router\";\n//import { Route } from \"react-router-dom\";\n// We import all the components we need in our app\n//import Navbar from \"./Component/navbar\";\nimport Record from \"./Component/Note/Record\";\nimport Records from \"./Component/Note/Records\";\n//import Gallery from \"./Component/Gallery/Gallery\";\n\n\n\nclass App extends Component {\n    // API url from the file '.env' OR the file '.env.development'.\n    // The first file is only used in production.\n    API_URL = process.env.REACT_APP_API_URL;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            //artwalks: [],\n\n            records: []\n        };\n    }\n\n    componentDidMount() {\n        // Get everything from the API\n\n        this.getRecords().then(() => console.log(\"Records got it!\"));\n    }\n\nasync getRecords() {\n        let url = `${this.API_URL}/records`; // URL of the API.\n        let result = await fetch(url); // Get the data\n        let json = await result.json(); // Turn it into json\n        return this.setState({ // Set it in the state\n            records: json\n        })\n\n    }\n\n    getRecord(id) {\n        // Find the relevant artwalk by id\n        return this.state.records.find(k => k._id === id);\n    }\n\n    render() {\n        return (\n            \n            <>\n                <Router>\n\n                    <Record path=\"/record/:id\" getRecord={id => this.getRecord(id)}/>\n                    <Records path=\"/\" records={this.state.records}/>\n                </Router>\n            </>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}